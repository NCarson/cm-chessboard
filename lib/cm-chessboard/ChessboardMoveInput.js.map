{"version":3,"sources":["../../src/cm-chessboard/ChessboardMoveInput.js"],"names":[],"mappings":"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","file":"ChessboardMoveInput.js","sourcesContent":["/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Svg} from \"../svjs-svg/src/svjs-svg/Svg.js\"\nimport {MOVE_INPUT_MODE, MARKER_TYPE} from \"./Chessboard.js\"\n\nconst STATE = {\n    waitForInputStart: 0,\n    pieceClickedThreshold: 1,\n    clickTo: 2,\n    secondClickThreshold: 3,\n    dragTo: 4,\n    clickDragTo: 5,\n    moveDone: 6,\n    reset: 7\n}\n\nconst DRAG_THRESHOLD = 2\n\nexport class ChessboardMoveInput {\n\n    constructor(view, state, props, moveStartCallback, moveDoneCallback, moveCanceledCallback) {\n        this.view = view\n        this.state = state\n        this.props = props\n        this.moveStartCallback = moveStartCallback\n        this.moveDoneCallback = moveDoneCallback\n        this.moveCanceledCallback = moveCanceledCallback\n        this.setMoveInputState(STATE.waitForInputStart)\n    }\n\n    setMoveInputState(newState, params = null) {\n\n        // console.log(\"setMoveInputState\", Object.keys(STATE)[this.moveInputState], \"=>\", Object.keys(STATE)[newState]);\n\n        const prevState = this.moveInputState\n        this.moveInputState = newState\n\n        switch (newState) {\n\n            case STATE.waitForInputStart:\n                break\n\n            case STATE.pieceClickedThreshold:\n                if (STATE.waitForInputStart !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.startIndex = params.index\n                this.endIndex = null\n                this.movedPiece = params.piece\n                this.updateStartEndMarkers()\n                this.startPoint = params.point\n                if (!this.pointerMoveListener && !this.pointerUpListener) {\n                    if (params.type === \"mousedown\") {\n\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"mousemove\"\n                        window.addEventListener(\"mousemove\", this.pointerMoveListener)\n\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"mouseup\"\n                        window.addEventListener(\"mouseup\", this.pointerUpListener)\n\n                    } else if (params.type === \"touchstart\") {\n\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"touchmove\"\n                        window.addEventListener(\"touchmove\", this.pointerMoveListener)\n\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"touchend\"\n                        window.addEventListener(\"touchend\", this.pointerUpListener)\n\n                    } else {\n                        throw Error(\"event type\")\n                    }\n                } else {\n                    throw Error(\"_pointerMoveListener or _pointerUpListener\")\n                }\n                break\n\n            case STATE.clickTo:\n                if (this.dragablePiece) {\n                    Svg.removeElement(this.dragablePiece)\n                    this.dragablePiece = null\n                }\n                if (prevState === STATE.dragTo) {\n                    this.view.setPieceVisibility(params.index)\n                }\n                break\n\n            case STATE.secondClickThreshold:\n                if (STATE.clickTo !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.startPoint = params.point\n                break\n\n            case STATE.dragTo:\n                if (STATE.pieceClickedThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.props.moveInputMode === MOVE_INPUT_MODE.dragPiece) {\n                    this.view.setPieceVisibility(params.index, false)\n                    this.createDragablePiece(params.piece)\n                }\n                break\n\n            case STATE.clickDragTo:\n                if (STATE.secondClickThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.props.moveInputMode === MOVE_INPUT_MODE.dragPiece) {\n                    this.view.setPieceVisibility(params.index, false)\n                    this.createDragablePiece(params.piece)\n                }\n                break\n\n            case STATE.moveDone:\n                if ([STATE.dragTo, STATE.clickTo, STATE.clickDragTo].indexOf(prevState) === -1) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.endIndex = params.index\n                if (this.endIndex && this.moveDoneCallback(this.startIndex, this.endIndex)) {\n                    const prevSquares = this.state.squares.slice(0)\n                    this.state.setPiece(this.startIndex, null)\n                    this.state.setPiece(this.endIndex, this.movedPiece)\n                    if (prevState === STATE.clickTo) {\n                        this.view.animatePieces(prevSquares, this.state.squares.slice(0), () => {\n                            this.setMoveInputState(STATE.reset)\n                        })\n                    } else {\n                        this.view.drawPieces(this.state.squares)\n                        this.setMoveInputState(STATE.reset)\n                    }\n                } else {\n                    this.view.drawPiecesDebounced()\n                    this.setMoveInputState(STATE.reset)\n                }\n                break\n\n            case STATE.reset:\n                if (this.startIndex && !this.endIndex && this.movedPiece) {\n                    this.state.setPiece(this.startIndex, this.movedPiece)\n                }\n                this.startIndex = null\n                this.endIndex = null\n                this.movedPiece = null\n                this.updateStartEndMarkers()\n                if (this.dragablePiece) {\n                    Svg.removeElement(this.dragablePiece)\n                    this.dragablePiece = null\n                }\n                if (this.pointerMoveListener) {\n                    window.removeEventListener(this.pointerMoveListener.type, this.pointerMoveListener)\n                    this.pointerMoveListener = null\n                }\n                if (this.pointerUpListener) {\n                    window.removeEventListener(this.pointerUpListener.type, this.pointerUpListener)\n                    this.pointerUpListener = null\n                }\n                this.setMoveInputState(STATE.waitForInputStart)\n                break\n\n            default:\n                throw Error(`moveInputState ${newState}`)\n        }\n    }\n\n    createDragablePiece(pieceName) {\n        if (this.dragablePiece) {\n            throw Error(\"dragablePiece exists\")\n        }\n        this.dragablePiece = Svg.createSvg(document.body)\n        this.dragablePiece.setAttribute(\"width\", this.view.squareWidth)\n        this.dragablePiece.setAttribute(\"height\", this.view.squareHeight)\n        this.dragablePiece.setAttribute(\"style\", \"pointer-events: none\")\n        this.dragablePiece.name = pieceName\n        const piece = Svg.addElement(this.dragablePiece, \"use\", {\n            href: `#${pieceName}`\n        })\n        const scaling = this.view.squareHeight / this.props.sprite.grid\n        const transformScale = (this.dragablePiece.createSVGTransform())\n        transformScale.setScale(scaling, scaling)\n        piece.transform.baseVal.appendItem(transformScale)\n    }\n\n    moveDragablePiece(x, y) {\n        this.dragablePiece.setAttribute(\"style\",\n            `pointer-events: none; position: absolute; left: ${x - (this.view.squareHeight / 2)}px; top: ${y - (this.view.squareHeight / 2)}px`)\n    }\n\n    onPointerDown(e) {\n        if (e.type === \"mousedown\" && e.button === 0 || e.type === \"touchstart\") {\n            const index = e.target.getAttribute(\"data-index\")\n            const pieceElement = this.view.getPiece(index)\n            if (index !== undefined) {\n                let pieceName, color\n                if (pieceElement) {\n                    pieceName = pieceElement.getAttribute(\"data-piece\")\n                    color = pieceName ? pieceName.substr(0, 1) : null\n                }\n                if (this.moveInputState !== STATE.waitForInputStart ||\n                    this.state.inputWhiteEnabled && color === \"w\" ||\n                    this.state.inputBlackEnabled && color === \"b\") {\n                    let point\n                    if (e.type === \"mousedown\") {\n                        point = {x: e.clientX, y: e.clientY}\n                    } else if (e.type === \"touchstart\") {\n                        point = {x: e.touches[0].clientX, y: e.touches[0].clientY}\n                    }\n                    if (this.moveInputState === STATE.waitForInputStart && pieceName && this.moveStartCallback(index)) {\n                        this.setMoveInputState(STATE.pieceClickedThreshold, {\n                            index: index,\n                            piece: pieceName,\n                            point: point,\n                            type: e.type\n                        })\n                    } else if (this.moveInputState === STATE.clickTo) {\n                        if (index === this.startIndex) {\n                            this.setMoveInputState(STATE.secondClickThreshold, {\n                                index: index,\n                                piece: pieceName,\n                                point: point,\n                                type: e.type\n                            })\n                        } else {\n                            this.setMoveInputState(STATE.moveDone, {index: index})\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onPointerMove(e) {\n        let x, y, target\n        if (e.type === \"mousemove\") {\n            x = e.pageX\n            y = e.pageY\n            target = e.target\n        } else if (e.type === \"touchmove\") {\n            x = e.touches[0].pageX\n            y = e.touches[0].pageY\n            target = document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY)\n        }\n        if (this.moveInputState === STATE.pieceClickedThreshold || this.moveInputState === STATE.secondClickThreshold) {\n            if (Math.abs(this.startPoint.x - x) > DRAG_THRESHOLD || Math.abs(this.startPoint.y - y) > DRAG_THRESHOLD) {\n                if (this.moveInputState === STATE.secondClickThreshold) {\n                    this.setMoveInputState(STATE.clickDragTo, {index: this.startIndex, piece: this.movedPiece})\n                } else {\n                    this.setMoveInputState(STATE.dragTo, {index: this.startIndex, piece: this.movedPiece})\n                }\n                if (this.props.moveInputMode === MOVE_INPUT_MODE.dragPiece) {\n                    this.moveDragablePiece(x, y)\n                }\n            }\n        } else if (this.moveInputState === STATE.dragTo || this.moveInputState === STATE.clickDragTo || this.moveInputState === STATE.clickTo) {\n            if (target && target.getAttribute && target.parentElement === this.view.boardGroup) {\n                const index = target.getAttribute(\"data-index\")\n                if (index !== this.startIndex && index !== this.endIndex) {\n                    this.endIndex = index\n                    this.updateStartEndMarkers()\n                } else if (index === this.startIndex && this.endIndex !== null) {\n                    this.endIndex = null\n                    this.updateStartEndMarkers()\n                }\n            } else {\n                this.endIndex = null\n                this.updateStartEndMarkers()\n            }\n            if (this.props.moveInputMode === MOVE_INPUT_MODE.dragPiece && (this.moveInputState === STATE.dragTo || this.moveInputState === STATE.clickDragTo)) {\n                this.moveDragablePiece(x, y)\n            }\n        }\n    }\n\n    onPointerUp(e) {\n        let x, y, target\n        if (e.type === \"mouseup\") {\n            target = e.target\n        } else if (e.type === \"touchend\") {\n            x = e.changedTouches[0].clientX\n            y = e.changedTouches[0].clientY\n            target = document.elementFromPoint(x, y)\n        }\n        if (target && target.getAttribute) {\n            const index = target.getAttribute(\"data-index\")\n\n            if (index) {\n                if (this.moveInputState === STATE.dragTo || this.moveInputState === STATE.clickDragTo) {\n                    if (this.startIndex === index) {\n                        if (this.moveInputState === STATE.clickDragTo) {\n                            this.state.setPiece(this.startIndex, this.movedPiece)\n                            this.view.setPieceVisibility(this.startIndex)\n                            this.setMoveInputState(STATE.reset)\n                        } else {\n                            this.setMoveInputState(STATE.clickTo, {index: index})\n                        }\n                    } else {\n                        this.setMoveInputState(STATE.moveDone, {index: index})\n                    }\n                } else if (this.moveInputState === STATE.pieceClickedThreshold) {\n                    this.setMoveInputState(STATE.clickTo, {index: index})\n                } else if (this.moveInputState === STATE.secondClickThreshold) {\n                    this.setMoveInputState(STATE.reset)\n                    this.moveCanceledCallback()\n                }\n            } else {\n                this.view.drawPiecesDebounced()\n                this.setMoveInputState(STATE.reset)\n                this.moveCanceledCallback()\n            }\n        } else {\n            this.view.drawPiecesDebounced()\n            this.setMoveInputState(STATE.reset)\n        }\n    }\n\n    updateStartEndMarkers() {\n        this.state.removeMarkers(null, MARKER_TYPE.move)\n        if (this.startIndex) {\n            this.state.addMarker(this.startIndex, MARKER_TYPE.move)\n        }\n        if (this.endIndex) {\n            this.state.addMarker(this.endIndex, MARKER_TYPE.move)\n        }\n        this.view.drawMarkersDebounced()\n    }\n\n    destroy() {\n        this.setMoveInputState(STATE.reset)\n    }\n}\n"]}